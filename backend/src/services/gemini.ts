import { GoogleGenerativeAI } from '@google/generative-ai';
import dotenv from 'dotenv';
import { QuestGeneration } from '../types';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

const GEMINI_API_KEY = process.env.GEMINI_API_KEY;

console.log('üîë GEMINI_API_KEY –∑–∞–≥—Ä—É–∂–µ–Ω:', GEMINI_API_KEY ? `${GEMINI_API_KEY.substring(0, 10)}...` : '‚ùå –ü–£–°–¢–û–ô');

if (!GEMINI_API_KEY) {
  console.warn('‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: GEMINI_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. AI –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –±—É–¥–µ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.');
}

const genAI = GEMINI_API_KEY ? new GoogleGenerativeAI(GEMINI_API_KEY) : null;

interface QuestParams {
  city: string;
  interests: string[];
  isPro: boolean;
}

const QUEST_PROMPT = `–ó–∞–¥–∞—á–∞: –°–≥–µ–Ω–µ—Ä–∏—Ä—É–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–≤–µ—Å—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
–ö–≤–µ—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º, –≤—ã–ø–æ–ª–Ω–∏–º—ã–º –∑–∞ 1 –¥–µ–Ω—å –∏ –º–æ—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ –≤—ã–π—Ç–∏ –∏–∑ –¥–æ–º–∞, –ø–æ–æ–±—â–∞—Ç—å—Å—è, –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ –∏–ª–∏ –∏—Å–ø—ã—Ç–∞—Ç—å —ç–º–æ—Ü–∏–∏.

–§–æ—Ä–º–∞—Ç –≤—ã–≤–æ–¥–∞ —Å—Ç—Ä–æ–≥–æ –≤ JSON:
{
  "title": "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–≤–µ—Å—Ç–∞ ‚Äî –∫–æ—Ä–æ—Ç–∫–æ–µ, –∑–∞–ø–æ–º–∏–Ω–∞—é—â–µ–µ—Å—è, –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ",
  "description": "2‚Äì3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –∏–Ω—Ç—Ä–∏–≥—É—é—Ç –∏ —Å–æ–∑–¥–∞—é—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ",
  "tasks": ["–ó–∞–¥–∞–Ω–∏–µ 1", "–ó–∞–¥–∞–Ω–∏–µ 2", "–ó–∞–¥–∞–Ω–∏–µ 3"],
  "reward": "–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å–¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ-–æ—Ç—á–µ—Ç",
  "category": "–æ–¥–Ω–∞ –∏–∑: –µ–¥–∞, —Å–ø–æ—Ä—Ç, –∏—Å–∫—É—Å—Å—Ç–≤–æ, –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è, —Ñ–æ—Ç–æ, –æ–±—â–µ–Ω–∏–µ, –¥–æ–±—Ä–æ—Ç–∞, –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è",
  "difficulty": "easy, medium –∏–ª–∏ hard",
  "estimatedTime": "–≤—Ä–µ–º—è –≤ –º–∏–Ω—É—Ç–∞—Ö (—á–∏—Å–ª–æ)"
}

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
- –ú–µ—Å—Ç–æ –¥–µ–π—Å—Ç–≤–∏—è ‚Äî {{city}}.
- –ö–≤–µ—Å—Ç –¥–æ–ª–∂–µ–Ω –ø–æ–¥—Ö–æ–¥–∏—Ç—å –¥–ª—è –æ–¥–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞, –Ω–æ –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ –±—ã—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º –∏ –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–∏.
- –ù–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ª–æ–∂–Ω—ã–µ –∏–ª–∏ –ø–ª–∞—Ç–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–∫—É–ø–∞—Ç—å –±–∏–ª–µ—Ç—ã –≤ —Ç–µ–∞—Ç—Ä).
- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –ª–æ–∫–∞—Ü–∏–∏ {{city}} (–ø–∞—Ä–∫–∏, —Ä–∞–π–æ–Ω—ã, –Ω–∞–±–µ—Ä–µ–∂–Ω—ã–µ, —Å—Ç–∞–Ω—Ü–∏–∏ –º–µ—Ç—Ä–æ, –∑–Ω–∞–∫–æ–≤—ã–µ –º–µ—Å—Ç–∞).
- –°–æ—Ö—Ä–∞–Ω—è—Ç—å –ª–µ–≥–∫–∏–π, –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–π –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π —Ç–æ–Ω.
- –ü—Ä–∏–º–µ—Ä—ã —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏: –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–π, –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π, –ø—Ä–∏–∫–ª—é—á–µ–Ω—á–µ—Å–∫–∏–π, –∏–Ω–æ–≥–¥–∞ —Å –Ω–æ—Ç–∫–æ–π —Ä–æ–º–∞–Ω—Ç–∏–∫–∏ –∏–ª–∏ —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏—è.
- –ó–∞–¥–∞–Ω–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–ø–∏—Å–∫–æ–º –∏–∑ 2-3 –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —à–∞–≥–æ–≤ (–ø–æ–Ω—è—Ç–Ω—ã—Ö, –≤—ã–ø–æ–ª–Ω–∏–º—ã—Ö, –±–µ–∑ –ø—Ä–∏–≤—è–∑–∫–∏ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –≤—Ä–µ–º–µ–Ω–∏).
{{interests}}
{{pro}}

–í–∞–∂–Ω–æ: –ö–≤–µ—Å—Ç –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–∫—É—á–Ω—ã–º –∏–ª–∏ —Å–ª–∏—à–∫–æ–º —Å–ª–æ–∂–Ω—ã–º. –í –Ω—ë–º –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å ¬´—ç–º–æ—Ü–∏—è¬ª ‚Äî —á—É–≤—Å—Ç–≤–æ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è, –æ—Ç–∫—Ä—ã—Ç–∏—è, —Å–≤–æ–±–æ–¥—ã –∏–ª–∏ –æ–±—â–µ–Ω–∏—è.

–û–¢–í–ï–¢ –î–û–õ–ñ–ï–ù –ë–´–¢–¨ –¢–û–õ–¨–ö–û –í–ê–õ–ò–î–ù–´–ú JSON, –ë–ï–ó –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û–ì–û –¢–ï–ö–°–¢–ê –ò –ë–ï–ó MARKDOWN –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–Ø.`;

/**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–≤–µ—Å—Ç–∞ —Å –ø–æ–º–æ—â—å—é Google Gemini AI
 * –í–ê–ñ–ù–û: –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏, –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–≤–µ—Å—Ç
 */
export async function generateQuest(params: QuestParams): Promise<QuestGeneration> {
  const { city, interests, isPro } = params;
  
  try {

    // –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç
    let prompt = QUEST_PROMPT.replace(/\{\{city\}\}/g, city);
    
    if (interests && interests.length > 0) {
      prompt = prompt.replace('{{interests}}', `- –£—á–∏—Ç—ã–≤–∞–π –∏–Ω—Ç–µ—Ä–µ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${interests.join(', ')}.`);
    } else {
      prompt = prompt.replace('{{interests}}', '');
    }

    if (isPro) {
      prompt = prompt.replace('{{pro}}', '- –≠—Ç–æ PRO –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —Å–¥–µ–ª–∞–π –∫–≤–µ—Å—Ç –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–º –∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–º —Å —ç–ª–µ–º–µ–Ω—Ç–æ–º VIP.');
    } else {
      prompt = prompt.replace('{{pro}}', '');
    }

    // –ï—Å–ª–∏ –Ω–µ—Ç API –∫–ª—é—á–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–π –∫–≤–µ—Å—Ç
    if (!genAI) {
      console.log('ü§ñ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–≤–µ—Å—Ç–∞ –±–µ–∑ AI (–Ω–µ—Ç API –∫–ª—é—á–∞)');
      return getFallbackQuest(city, isPro);
    }

  // –ü–æ–ø—ã—Ç–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
  const maxAttempts = 4; // 4 –ø–æ–ø—ã—Ç–∫–∏ –∑–∞ 20 —Å–µ–∫—É–Ω–¥
  const delayBetweenAttempts = 1000; // 1 —Å–µ–∫—É–Ω–¥–∞ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏
  const startTime = Date.now();
  const maxWaitTime = 20000; // 20 —Å–µ–∫—É–Ω–¥ –º–∞–∫—Å–∏–º—É–º

  for (let attempt = 1; attempt <= maxAttempts; attempt++) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—Ä–µ–≤—ã—à–µ–Ω–æ –ª–∏ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è
    if (Date.now() - startTime > maxWaitTime) {
      console.log(`‚è∞ –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è (20 —Å–µ–∫), –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–º –∫–≤–µ—Å—Ç–∞–º`);
      break;
    }

    try {
      console.log(`ü§ñ [${new Date().toISOString()}] –ü–æ–ø—ã—Ç–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–≤–µ—Å—Ç–∞ ${attempt}/${maxAttempts} —á–µ—Ä–µ–∑ Google Gemini...`);
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º Gemini 2.0 Flash Experimental - –±—ã—Å—Ç—Ä–∞—è –∏ –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –º–æ–¥–µ–ª—å
      const model = genAI.getGenerativeModel({ 
        model: 'gemini-2.0-flash-exp',
        generationConfig: {
          temperature: 0.9, // –í—ã—Å–æ–∫–∞—è –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å
          maxOutputTokens: 500,
          responseMimeType: 'application/json', // –¢—Ä–µ–±—É–µ–º JSON –æ—Ç–≤–µ—Ç
        }
      });

      const result = await model.generateContent(prompt);
      const response = result.response;
      const text = response.text();
      
      if (!text) {
        throw new Error('–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç Gemini');
      }

      // –ü–∞—Ä—Å–∏–º JSON
      let quest: QuestGeneration;
      try {
        // –£–±–∏—Ä–∞–µ–º markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
        const cleanText = text.replace(/```json\n?/g, '').replace(/```\n?/g, '').trim();
        quest = JSON.parse(cleanText);
      } catch (parseError) {
        console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON:', text);
        throw new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç AI');
      }
      
      // –í–∞–ª–∏–¥–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞
      if (!quest.title || !quest.description || !quest.tasks || !Array.isArray(quest.tasks)) {
        throw new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç AI');
      }

      console.log(`‚úÖ –ö–≤–µ—Å—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —Å –ø–æ–ø—ã—Ç–∫–∏ ${attempt}: "${quest.title}"`);
      
      return quest;
      
    } catch (error: any) {
      const isServiceUnavailable = error.message.includes('503') || 
                                  error.message.includes('Service Unavailable') ||
                                  error.message.includes('overloaded');
      
      if (isServiceUnavailable) {
        console.log(`‚ö†Ô∏è  [${new Date().toISOString()}] –°–µ—Ä–≤–∏—Å Gemini –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω (–ø–æ–ø—ã—Ç–∫–∞ ${attempt}/${maxAttempts}): ${error.message}`);
      } else {
        console.error(`‚ùå [${new Date().toISOString()}] –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–≤–µ—Å—Ç–∞ —á–µ—Ä–µ–∑ Gemini (–ø–æ–ø—ã—Ç–∫–∞ ${attempt}):`, error.message);
      }
      
      // –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞, –∂–¥–µ–º –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π
      if (attempt < maxAttempts && Date.now() - startTime + delayBetweenAttempts <= maxWaitTime) {
        console.log(`‚è≥ [${new Date().toISOString()}] –ñ–¥–µ–º ${delayBetweenAttempts/1000} —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π...`);
        await new Promise(resolve => setTimeout(resolve, delayBetweenAttempts));
        continue;
      } else {
        console.log(`üîÑ –ü–æ–ø—ã—Ç–∫–∞ ${attempt} –Ω–µ —É–¥–∞–ª–∞—Å—å, ${attempt === maxAttempts ? '–≤—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã' : '–≤—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ'}`);
      }
    }
  }

    console.log('üîÑ –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–≤–µ—Å—Ç—ã');
    return getFallbackQuest(city, isPro);
    
  } catch (error: any) {
    // –ê–±—Å–æ–ª—é—Ç–Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π fallback - –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏
    console.error('üö® –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ generateQuest, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–π –∫–≤–µ—Å—Ç:', error.message);
    return getFallbackQuest(params.city, params.isPro);
  }
}

/**
 * –ó–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–≤–µ—Å—Ç—ã –Ω–∞ —Å–ª—É—á–∞–π –æ—à–∏–±–∫–∏ API
 */
function getFallbackQuest(city: string, isPro: boolean): QuestGeneration {
  const fallbackQuests: QuestGeneration[] = [
    {
      title: '–§–∏–æ–ª–µ—Ç–æ–≤–∞—è –æ—Ö–æ—Ç–∞',
      description: '–°–µ–≥–æ–¥–Ω—è —Ç–≤–æ–π –ª—é–±–∏–º—ã–π —Ü–≤–µ—Ç ‚Äî —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π! –î–æ–∫–∞–∂–∏ —ç—Ç–æ –≥–æ—Ä–æ–¥—É.',
      tasks: [
        '–ù–∞–π–¥–∏ –∏ —Å—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É–π —á—Ç–æ-—Ç–æ —Ñ–∏–æ–ª–µ—Ç–æ–≤–æ–µ –≤ —Ä–∞–¥–∏—É—Å–µ 100 –º–µ—Ç—Ä–æ–≤ –æ—Ç —Ç–≤–æ–µ–≥–æ –¥–æ–º–∞',
        '–ö—É–ø–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å —Ñ–∏–æ–ª–µ—Ç–æ–≤–æ–µ (–º–æ—Ä–æ–∂–µ–Ω–æ–µ, —Ü–≤–µ—Ç–æ–∫, –æ—Ç–∫—Ä—ã—Ç–∫—É)',
        '–ù–∞–π–¥–∏ —á–µ–ª–æ–≤–µ–∫–∞ –≤ —Ñ–∏–æ–ª–µ—Ç–æ–≤–æ–π –æ–¥–µ–∂–¥–µ –∏ –ø–æ–ø—Ä–æ—Å–∏ —Å–¥–µ–ª–∞—Ç—å —Å–æ–≤–º–µ—Å—Ç–Ω–æ–µ —Å–µ–ª—Ñ–∏',
        '–°–¥–µ–ª–∞–π —Ñ–æ—Ç–æ –∑–∞–∫–∞—Ç–∞ —Å —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–º–∏ –æ—Ç—Ç–µ–Ω–∫–∞–º–∏',
        '–ü–æ–¥–µ–ª–∏—Å—å –ª—É—á—à–∏–º —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–º —Ñ–æ—Ç–æ –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö —Å —Ö–µ—à—Ç–µ–≥–æ–º #QuestGO'
      ],
      reward: '–û—Ç–ø—Ä–∞–≤—å –∫–æ–ª–ª–∞–∂ –∏–∑ –≤—Å–µ—Ö —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã—Ö –Ω–∞—Ö–æ–¥–æ–∫ –∏ –ø–æ—á—É–≤—Å—Ç–≤—É–π —Å–µ–±—è –Ω–∞—Å—Ç–æ—è—â–∏–º –æ—Ö–æ—Ç–Ω–∏–∫–æ–º –∑–∞ —Ü–≤–µ—Ç–æ–º!',
      category: '—Ñ–æ—Ç–æ',
      difficulty: 'easy',
      estimated_time: 60
    },
    {
      title: '–ö–æ—Ñ–µ–π–Ω—ã–π –¥–µ—Ç–µ–∫—Ç–∏–≤',
      description: '–°—Ç–∞–Ω—å —ç–∫—Å–ø–µ—Ä—Ç–æ–º –ø–æ –∫–æ—Ñ–µ–π–Ω—è–º —Å–≤–æ–µ–≥–æ —Ä–∞–π–æ–Ω–∞ –∑–∞ –æ–¥–∏–Ω –¥–µ–Ω—å!',
      tasks: [
        `–ù–∞–π–¥–∏ 3 –∫–æ—Ñ–µ–π–Ω–∏ –≤ —Ä–∞–¥–∏—É—Å–µ 1 –∫–º –æ—Ç —Ç–µ–±—è –≤ ${city}`,
        '–ó–∞–∫–∞–∂–∏ –≤ –∫–∞–∂–¥–æ–π —Ä–∞–∑–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫ (–∫–∞–ø—É—á–∏–Ω–æ, –ª–∞—Ç—Ç–µ, —Ä–∞—Ñ)',
        '–°–ø—Ä–æ—Å–∏ –±–∞—Ä–∏—Å—Ç–∞ –æ —Å–∞–º–æ–º –Ω–µ–æ–±—ã—á–Ω–æ–º –∑–∞–∫–∞–∑–µ –¥–Ω—è',
        '–°—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É–π —Å–∞–º—É—é –∫—Ä–∞—Å–∏–≤—É—é –ø–æ–¥–∞—á—É –∫–æ—Ñ–µ',
        '–û—Å—Ç–∞–≤—å –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–π –æ—Ç–∑—ã–≤ –≤ –ª—é–±–∏–º–æ–π –∫–æ—Ñ–µ–π–Ω–µ'
      ],
      reward: '–¢–µ–ø–µ—Ä—å —Ç—ã –∑–Ω–∞–µ—à—å, –≥–¥–µ –≤–∞—Ä—è—Ç –ª—É—á—à–∏–π –∫–æ—Ñ–µ –≤ —Ç–≤–æ–µ–º —Ä–∞–π–æ–Ω–µ!',
      category: '–µ–¥–∞',
      difficulty: 'medium',
      estimated_time: 120
    },
    {
      title: '–°–ª—É—á–∞–π–Ω–∞—è –¥–æ–±—Ä–æ—Ç–∞',
      description: '–°–µ–≥–æ–¥–Ω—è —Ç—ã ‚Äî —Ç–∞–π–Ω—ã–π —Å—É–ø–µ—Ä–≥–µ—Ä–æ–π –¥–æ–±—Ä–æ—Ç—ã. –ù–∏–∫—Ç–æ –Ω–µ –¥–æ–ª–∂–µ–Ω –∑–Ω–∞—Ç—å!',
      tasks: [
        '–ö—É–ø–∏ –∫–æ—Ñ–µ –¥–ª—è –Ω–µ–∑–Ω–∞–∫–æ–º—Ü–∞ –∏ —É–π–¥–∏, –Ω–µ –¥–æ–∂–∏–¥–∞—è—Å—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏',
        '–û—Å—Ç–∞–≤—å –∑–∞–ø–∏—Å–∫—É —Å –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–æ–º –Ω–∞ —á—å–µ–π-—Ç–æ –º–∞—à–∏–Ω–µ',
        '–ü–æ–º–æ–≥–∏ –∫–æ–º—É-—Ç–æ –¥–æ–Ω–µ—Å—Ç–∏ —Ç—è–∂–µ–ª—ã–µ —Å—É–º–∫–∏',
        '–û—Å—Ç–∞–≤—å –∫–Ω–∏–≥—É –Ω–∞ —Å–∫–∞–º–µ–π–∫–µ —Å –∑–∞–ø–∏—Å–∫–æ–π "–í–æ–∑—å–º–∏ –º–µ–Ω—è"',
        '–ù–∞–∫–æ—Ä–º–∏ –±–µ–∑–¥–æ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ'
      ],
      reward: '–ó–∞–ø–∏—à–∏, –∫–∞–∫ —Ç—ã —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—à—å –ø–æ—Å–ª–µ —ç—Ç–∏—Ö –¥–æ–±—Ä—ã—Ö –¥–µ–ª. –≠—Ç–æ —Ç–≤–æ—è —Å—É–ø–µ—Ä—Å–∏–ª–∞!',
      category: '–¥–æ–±—Ä–æ—Ç–∞',
      difficulty: 'medium',
      estimated_time: 90
    }
  ];

  const proQuests: QuestGeneration[] = [
    {
      title: 'VIP: –ì–∞—Å—Ç—Ä–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ',
      description: '–°–µ–≥–æ–¥–Ω—è —Ç—ã ‚Äî –∫—Ä–∏—Ç–∏–∫ –ú–∏—à–ª–µ–Ω. –ò—Å–ø—ã—Ç–∞–π 5 —Ä–∞–∑–Ω—ã—Ö –∫—É—Ö–æ–Ω—å –º–∏—Ä–∞!',
      tasks: [
        `–ü–æ—Å–µ—Ç–∏ 5 –∑–∞–≤–µ–¥–µ–Ω–∏–π —Ä–∞–∑–Ω—ã—Ö –∫—É—Ö–æ–Ω—å –≤ ${city} (–∏—Ç–∞–ª—å—è–Ω—Å–∫–∞—è, —è–ø–æ–Ω—Å–∫–∞—è, –≥—Ä—É–∑–∏–Ω—Å–∫–∞—è, –∏–Ω–¥–∏–π—Å–∫–∞—è, —Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–∞—è)`,
        '–ó–∞–∫–∞–∂–∏ –≤ –∫–∞–∂–¥–æ–º —Å–∞–º–æ–µ –ø–æ–ø—É–ª—è—Ä–Ω–æ–µ –±–ª—é–¥–æ',
        '–í–µ–¥–∏ –¥–Ω–µ–≤–Ω–∏–∫ –≤–∫—É—Å–æ–≤: –æ–ø–∏—Å—ã–≤–∞–π –∫–∞–∂–¥–æ–µ –±–ª—é–¥–æ –æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º',
        '–°–¥–µ–ª–∞–π —ç—Å—Ç–µ—Ç–∏—á–Ω–æ–µ —Ñ–æ—Ç–æ –∫–∞–∂–¥–æ–≥–æ –±–ª—é–¥–∞',
        '–°–æ—Å—Ç–∞–≤—å —Å–≤–æ–π —Ç–æ–ø-3 –∏ –ø–æ–¥–µ–ª–∏—Å—å –≤ stories'
      ],
      reward: '–°–æ–∑–¥–∞–π —Å–≤–æ—é –∫–∞—Ä—Ç—É –≥–∞—Å—Ç—Ä–æ–Ω–æ–º–∏—á–µ—Å–∫–∏—Ö –æ—Ç–∫—Ä—ã—Ç–∏–π –≥–æ—Ä–æ–¥–∞!',
      category: '–µ–¥–∞',
      difficulty: 'hard',
      estimated_time: 240
    },
    {
      title: 'VIP: –§–æ—Ç–æ—Å–µ—Å—Å–∏—è –≤ —Å—Ç–∏–ª–µ 80-—Ö',
      description: '–ü—Ä–µ–≤—Ä–∞—Ç–∏—Å—å –≤ –∑–≤–µ–∑–¥—É —Ä–µ—Ç—Ä–æ-—ç–ø–æ—Ö–∏ –Ω–∞ –æ–¥–∏–Ω –¥–µ–Ω—å!',
      tasks: [
        '–ù–∞–π–¥–∏ –≤–∏–Ω—Ç–∞–∂–Ω—É—é –æ–¥–µ–∂–¥—É –≤ —Å—Ç–∏–ª–µ 80-—Ö (–∫–æ–º–∏—Å—Å–∏–æ–Ω–∫–∏, –≥–∞—Ä–¥–µ—Ä–æ–± —Ä–æ–¥–∏—Ç–µ–ª–µ–π)',
        '–°–æ–∑–¥–∞–π –æ–±—Ä–∞–∑ —Å —è—Ä–∫–∏–º–∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä–∞–º–∏',
        `–ù–∞–π–¥–∏ –ª–æ–∫–∞—Ü–∏–∏ –≤ ${city} –≤ —Å—Ç–∏–ª–µ 80-—Ö (—Å—Ç–∞—Ä—ã–µ –∑–¥–∞–Ω–∏—è, —Å–æ–≤–µ—Ç—Å–∫–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞)`,
        '–£—Å—Ç—Ä–æ–π —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏—é —Å –¥—Ä—É–∑—å—è–º–∏ –∏–ª–∏ –ø—Ä–æ—Ö–æ–∂–∏–º–∏',
        '–°–æ–∑–¥–∞–π —Ä–µ—Ç—Ä–æ-–∫–æ–ª–ª–∞–∂ –∏ –≤—ã–ª–æ–∂–∏ —Å –º—É–∑—ã–∫–æ–π 80-—Ö'
      ],
      reward: '–ú–∞—à–∏–Ω–∞ –≤—Ä–µ–º–µ–Ω–∏ –≥–æ—Ç–æ–≤–∞! –°–æ—Ö—Ä–∞–Ω–∏ —ç—Ç–∏ —Ñ–æ—Ç–æ –∫–∞–∫ –ø–∞–º—è—Ç—å –æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–∏ –≤ –ø—Ä–æ—à–ª–æ–µ.',
      category: '—Ñ–æ—Ç–æ',
      difficulty: 'hard',
      estimated_time: 180
    }
  ];

  const questsPool = isPro ? [...fallbackQuests, ...proQuests] : fallbackQuests;
  const randomQuest = questsPool[Math.floor(Math.random() * questsPool.length)];
  
  return {
    ...randomQuest,
    description: randomQuest.description.replace(/–ú–æ—Å–∫–≤–∞/g, city)
  };
}

export default {
  generateQuest
};

